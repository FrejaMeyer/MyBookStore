@page "/order/{orderId}"
@inject HttpClient Http
@inject NavigationManager Navigation
@inject BasketClientService BasketService
@using Shared.Dto;
@using System.Net.Http.Json
@using Microsoft.AspNetCore.Components
@using Services

<h3>Ordre confirmation</h3>

@if (order == null)
{
    <p>Loading orderdetails...</p>
}
else
{
    <p><strong>Ordre-ID:</strong> @order.OrderId</p>
    <p><strong>Name:</strong> @order.Customer.Name</p>
    <p><strong>Email:</strong> @order.Customer.Email</p>
    <p><strong>Address:</strong> @order.Customer.Address</p>

    <table class="table mt-3">
        <thead>
            <tr>
                <th>Product</th>
                <th>Quantity</th>
                <th>Price</th>
                <th>Total</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in order.Items)
            {
                <tr>
                    <td>@item.Name</td>
                    <td>@item.Quantity</td>
                    <td>@item.UnitPrice.ToString("C")</td>
                    <td>@((item.Quantity* item.UnitPrice).ToString("C"))</td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr>
                <td colspan="3"><strong>Total:</strong></td>
                <td><strong>@order.TotalPrice.ToString("C")</strong></td>
            </tr>
        </tfoot>
    </table>

    <button class="btn btn-primary" @onclick="GoHome">Done</button>
}

@code {
    [Parameter]
    public string? orderId { get; set; }

    private OrderDto? order;


    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(orderId))
        {

            order = await Http.GetFromJsonAsync<OrderDto>($"orderservice/method/order/{orderId}");
            await BasketService.ClearCartAsync(); 
        }
    }

    private void GoHome()
    {
        Navigation.NavigateTo("/", forceLoad: true);
    }



}
