@using System.Text.Json


@page "/books"
@inject HttpClient Http
@inject NavigationManager Navigation


<h3>Books</h3>

@if (!string.IsNullOrWhiteSpace(errorMessage))
{
    <p style="color:red">FEJL: @errorMessage</p>
}
else
{
    <div class="container mt-4">
        <div class="row row-cols-2 row-cols-md-3 row-cols-lg-4 g-4">
            @foreach (var book in books)
            {
                <div class="col">
                    <div class="card h-100 shadow-sm">
                        <a @onclick="@(() => NavigateToBook(book.Id))" style="cursor: pointer">
                        <img src="@book.ImageUrl" class="card-img-top p-2" style="height: 300px; width: 100%; object-fit: contain; background-color: white;" />
                        </a>
                        <div class="card-body d-flex flex-column">
                            <h6 class="card-title">@book.Title</h6>
                            <p class="card-subtitle text-muted mb-2">@book.Author</p>
                            <div class="mt-auto fw-bold text-danger">kr. @book.Price.ToString("F2")</div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}

@code {
    private List<Book> books;
    private string errorMessage; 

    private void NavigateToBook(string id)
    {
        Navigation.NavigateTo($"/book/{id}");
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var response = await Http.GetAsync("catalogservice/method/api/catalog");

            if (!response.IsSuccessStatusCode)
            {
                Console.WriteLine($"Fejlstatus fra API: {response.StatusCode}");
                return;
            }

            var content = await response.Content.ReadAsStringAsync();
            Console.WriteLine("RAW JSON:");
            Console.WriteLine(content);

            books = JsonSerializer.Deserialize<List<Book>>(content, new JsonSerializerOptions
            {
                PropertyNameCaseInsensitive = true
            });

            Console.WriteLine($"Hentede {books?.Count ?? 0} bøger");
        }
        catch (Exception ex)
        {
            errorMessage = ex.ToString();
            Console.WriteLine("💥 Exception:");
            Console.WriteLine(ex.ToString());
        }    
    }

    public class Book
    {
        public string Id { get; set; }
        public string Title { get; set; }
        public string Genre { get; set; }
        public string Author { get; set; }
        public double Price { get; set; }
        public int StockQuantity { get; set; }
        public string ImageUrl { get; set; }
    }
}